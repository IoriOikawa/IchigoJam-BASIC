FILES
1.0.0～
IchigoJam PC 0.1 beta 5〜
-----------------------------------------------------------
[ 功能 ]
显示所有的程序。

[ 使用方式 ]
FILES [[<开始的文件编号>,]<末尾的文件编号>] (1.1.0～)
FILES [<最大文件数量>] (～1.0.2)

[ 例 ]
FILES
FILES 0,163 (1.1 beta〜)
FILES 68 (～1.0.2)

[ 说明 ]
当把 IchigoJam 和 EEPROM 连接在一起时，
显示 EEPROM 中所包含的程序。

若对应编号的程序存在的话，
则会显示出该程序从第一行起的所有注释行。
如果你有用 ```'``` 注释块为程序写过注释的话，这样就会很方便。

在 EEPROM 的容量是 512K 或者 1024K 比特位的情况下，
除了某些 EEPROM 之外，都可以完整的显示出来。
在 32K 到 256K 比特位的情况下，
需要注意同一个程序可能会有多个编号。
使用容量为 16K 或更少比特位的 EEPROM 时，
由于 I2C 的访问有所不同，它们将不能用来保存程序。

在 1.0.1、1.0.2 (包括 beta 12 版本) 中，
可以传入 <最大文件数量>。
从 1.1 beta (包括 1.0.2 beta 11) 开始
这个命令显示的文件范围用 <开始的文件编号> 和 <末尾的文件编号> 来表示。
FILES 不使用参数时，则只输出本机上所保存的文件。
FILES 0 会将本机和外部 EEPROM 上保存的所有文件都显示出来。
也可以只传入 <末尾的文件编号> 而不使用 ```,``` 分隔符。
FILES 110 和 FILES 0,110 是同样的意思。


在 1.0.1、1.0.2 beta 中，
可以在文件列表中指定显示文件的数量。

要表示文件，输入想表示的文件个数，
IchigoJam 将会按照下表的规则调用文件编号：
本机可储存 4 个文件，调用编号为 [0, 3]
在有外部 EEPROM 时，在外部 EEPROM 上的文件由 100 起开始编号

具体的数值如下表

     8 个文件  = 编号 \[0, 3](本机), \[100, 103](外部 32K 比特位 EEPROM)
     型号举例 AT24C32C
     12 个文件 = 编号 \[0, 3](本机), \[100, 107](外部 64K 比特位 EEPROM)
     型号举例 24FC64
     20 个文件 = 编号 \[0, 3](本机), \[100, 115](外部 128K 比特位 EEPROM)
     型号举例 24LC128
     36 个文件 = 编号 \[0, 3](本机), \[100, 131](外部 256K 比特位 EEPROM)
     型号举例 24FC256
     68 个文件 = 编号 \[0, 3](本机), \[100, 163](外部 512K 比特位 EEPROM)
     型号举例 24FC512
     132 个文件 = 编号 \[0, 3](本机), \[100, 227](外部 1024K 比特位 EEPROM)
     型号举例 24FC1025
     0  = 全部表示
    

每一页可以显示 22 个文件。输入 22 的倍数，结果将分页显示。

需要注意的是，
当程序编号下无对应程序时，将不会显示，
但此时程序编号依旧计数有效，
故显示的文件数量可能少于请求数。


1.1 beta 以后的固件版本，支持以下推荐格式遍历所有文件，也可自行指定范围：
（EEPROM 小于 512K 比特位时，请将 A2 接地方可）

      仅本机程序 = FILES 或者 FILES 0,3
     32K 比特位 = FILES 103 或者 FILES 0,103
     64K 比特位 = FILES 107 或者 FILES 0,107
    128K 比特位 = FILES 115 或者 FILES 0,115
    256K 比特位 = FILES 131 或者 FILES 0,131
    512K 比特位 = FILES 163 或者 FILES 0,163
       全部表示 = FILES 0 或者 FILES 0,227

注）
IchigoJam PC 上，虽然显示文件命令要求为 FILES 0,227
然没有外部 EEPROM 的情况下，只会调取程序 [0, 3] 共四个。
